<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.redhat.consulting</groupId>
    <artifactId>cni-transaction-service</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <spring-boot.version>2.3.1.RELEASE</spring-boot.version>
        <openapi-generator-maven-plugin.version>4.3.1</openapi-generator-maven-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
        <replacer-maven-plugin.version>1.5.3</replacer-maven-plugin.version>

        <jackson-databind-nullable.version>0.1.0</jackson-databind-nullable.version>
        <jsr305.version>3.0.2</jsr305.version>
        <webjars-locator-core.version>0.41</webjars-locator-core.version>
        <swagger-ui.version>3.25.0</swagger-ui.version>
        <swagger-annotations.version>1.6.1</swagger-annotations.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <dozer.version>6.5.0</dozer.version>
        <hibernate.version>5.4.17.Final</hibernate.version>
    </properties>

    <!-- Manage POM imports and dependency versions -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.openapitools</groupId>
                <artifactId>jackson-databind-nullable</artifactId>
                <version>${jackson-databind-nullable.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${jsr305.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>webjars-locator-core</artifactId>
                <version>${webjars-locator-core.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.dozermapper</groupId>
                <artifactId>dozer-spring-boot-starter</artifactId>
                <version>${dozer.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Actual dependencies - all versions should already be specified above -->
    <dependencies>
        <!-- Service dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>

        <!-- Additional client dependencies -->
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>

        <!-- Implementation dependencies -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.dozermapper</groupId>
            <artifactId>dozer-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Similar to above: manage plugin versions first -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                    <artifactId>replacer</artifactId>
                    <version>${replacer-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- Now handle actual plugin executions and configurations -->
        <plugins>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-balance-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- TODO(rgrimm): Change this too a different YAML for balance service -->
                            <inputSpec>${project.basedir}/src/main/resources/specs/transaction-service.yaml</inputSpec>
                            <output>${project.build.directory}/generated-sources/openapi-balance-client</output>

                            <generatorName>java</generatorName>

                            <!-- Don't need tests for generated code; assume that generated code works -->
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>

                            <!-- Only generate specific supporting files -->
                            <supportingFilesToGenerate>
                                ApiKeyAuth.java,Authentication.java,HttpBasicAuth.java,HttpBearerAuth.java,ApiClient.java,RFC3339DateFormat.java,ServerConfiguration.java,ServerVariable.java
                            </supportingFilesToGenerate>

                            <!-- Configuration specific to the Java client generator -->
                            <configOptions>
                                <!-- Use Spring 4.x-style RestTemplate as library (sub-generator) -->
                                <library>resttemplate</library>

                                <!-- Configure Packages -->
                                <basePackage>com.redhat.consulting.transaction.client.balance</basePackage>
                                <apiPackage>com.redhat.consulting.transaction.client.balance.api</apiPackage>
                                <modelPackage>com.redhat.consulting.transaction.client.balance.model</modelPackage>

                                <!-- Use Java 8 and serializable -->
                                <java8>true</java8>
                                <dateLibrary>java8</dateLibrary>
                                <serializableModel>true</serializableModel>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-transaction-service</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/specs/transaction-service.yaml</inputSpec>
                            <output>${project.build.directory}/generated-sources/openapi-transaction-service</output>

                            <generatorName>spring</generatorName>

                            <!-- Only generate specific supporting files -->
                            <supportingFilesToGenerate>ApiUtil.java,RFC3339DateFormat.java</supportingFilesToGenerate>

                            <!-- Options specific to the Spring generator -->
                            <configOptions>
                                <!-- Use Spring Boot as sub-generator type; not Spring MVC or others -->
                                <library>spring-boot</library>

                                <!-- Configure Packages -->
                                <basePackage>com.redhat.consulting.transaction</basePackage>
                                <apiPackage>com.redhat.consulting.transaction.api</apiPackage>
                                <configPackage>com.redhat.consulting.transaction.config</configPackage>
                                <modelPackage>com.redhat.consulting.transaction.model</modelPackage>

                                <!-- Use delegate pattern to allow implementation external to generated files -->
                                <delegatePattern>true</delegatePattern>

                                <!-- Use Java 8 and serializable -->
                                <java8>true</java8>
                                <dateLibrary>java8</dateLibrary>
                                <serializableModel>true</serializableModel>

                                <!-- Validate data coming into the service -->
                                <useBeanValidation>true</useBeanValidation>
                                <performBeanValidation>true</performBeanValidation>

                                <!-- Support XML because why not -->
                                <withXml>true</withXml>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.hibernate</groupId>
                            <artifactId>hibernate-jpamodelgen</artifactId>
                            <version>${hibernate.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- Unpack the swagger-ui webjar so that the default API can be adjusted -->
                        <id>unpack-swagger-ui-content</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.webjars</groupId>
                                    <artifactId>swagger-ui</artifactId>
                                    <version>${swagger-ui.version}</version>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>

                            <!-- Don't include the gzipped index.html, since the contents will be modified -->
                            <excludes>**/index.html.gz</excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <executions>
                    <execution>
                        <id>replace-swagger-default-url</id>
                        <!-- Replace the default petstore example with the transaction-server JSON -->
                        <phase>process-resources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <configuration>
                            <file>
                                ${project.build.outputDirectory}/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}/index.html
                            </file>
                            <replacements>
                                <replacement>
                                    <token>https://petstore.swagger.io/v2/swagger.json</token>
                                    <value>../transaction-service.json</value>
                                </replacement>
                            </replacements>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-repackage</id>
                        <phase>package</phase>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-cli</id>
                        <phase>none</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <!-- Automatically use the "dev" profile when running with "mvn spring-boot:run" -->
                            <profiles>dev</profiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
